var app=angular.module("app",["ngRoute"]);angular.module("app").controller("ApplicationCtrl",["$scope","UserSvc","$window",function(e){e.$on("login",function(n,t){e.currentUser=t})}]),angular.module("app").controller("AnswerCtrl",["$scope","AnswersSvc","QuestionsSvc","$location",function(e,n,t,o){e.postAnswer=function(){n.create(o.path(),{username:e.username,body:e.answerBody}).success(function(n){e.answers.unshift(n),e.answerBody=null,console.log(n.body)}).error(function(){e.errorMsg="All fields must be filled out"})},t.fetchOne(o.path()).success(function(n){e.answers=n.answers})}]),angular.module("app").service("AnswersSvc",["$http",function(e){this.create=function(n,t){return e.post("/api/questions"+n,t)},this.fetch=function(n){return e.get("/api/questions"+n)}}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc","$location","$window",function(e,n,t){e.login=function(o,r){n.login(o,r).then(function(n){e.$emit("login",n),t.path("/")},function(){e.errorMsg="Incorrect username/password"})}}]),angular.module("app").controller("QuestionDetailCtrl",["$scope","QuestionsSvc","$location",function(e,n,t){n.fetchOne(t.path()).success(function(n){e.question=n})}]),angular.module("app").controller("QuestionsCtrl",["$scope","QuestionsSvc","$location",function(e,n,t){e.askQuestion=function(){n.create({username:e.username,title:e.questionTitle,body:e.questionBody}).success(function(n){e.questions.unshift(n),e.questionBody=null,e.questionTitle=null,t.path("/")}).error(function(){e.errorMsg="All fields must be filled out"})},n.fetch().success(function(n){e.questions=n})}]),angular.module("app").service("QuestionsSvc",["$http",function(e){this.fetch=function(){return e.get("/api/questions/")},this.create=function(n){return e.post("/api/questions",n)},this.fetchOne=function(n){return e.get("/api/questions/"+n)}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc","$location",function(e,n,t){e.register=function(o,r){n.register(o,r).then(function(n){e.$emit("login",n),t.path("/")})}}]),app.config(["$routeProvider",function(e){e.when("/",{controller:"QuestionsCtrl",templateUrl:"questions.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"}).when("/ask",{controller:"QuestionsCtrl",templateUrl:"ask.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/:id",{controller:"QuestionDetailCtrl",templateUrl:"questionDetail.html"})}]),angular.module("app").service("UserSvc",["$http","$window",function(e){var n=this;n.getUser=function(){return e.get("/api/users").then(function(e){return e.data})},n.login=function(t,o){return e.post("/api/sessions",{username:t,password:o}).then(function(t){return n.token=t.data.token,e.defaults.headers.common["X-Auth"]=t.data,n.getUser()})},n.register=function(t,o){return e.post("/api/users",{username:t,password:o}).then(function(){return n.login(t,o)})}}]);
//# sourceMappingURL=data:application/json;base64,