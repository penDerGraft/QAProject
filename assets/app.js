var app=angular.module("app",["ngRoute"]);angular.module("app").controller("ApplicationCtrl",["$scope","UserSvc","$window",function(e,n,t){t.sessionStorage.token&&n.checkUser().then(function(n){e.currentUser=n}),e.logout=function(){n.logout(),e.currentUser=!1,e.logoutMessage="You have been logged out"},e.$on("login",function(n,t){e.currentUser=t})}]),angular.module("app").controller("AnswerCtrl",["$scope","AnswersSvc","QuestionsSvc","$location",function(e,n,t,s){e.editBody="",e.postAnswer=function(n){e.answers.push({username:e.currentUser.username,body:n,votes:0});var o={_id:e.question._id,answers:e.answers};t.update(s.path(),o).success(function(n){e.answers=n.answers})},e.deleteAnswer=function(t,s){console.log(t,s),n.deleteAnswer(t,s).success(function(n){e.answers=n})},e.editAnswer=function(n,o){e.answers.forEach(function(e){e._id===n&&(e.body=o)}),console.log(e.answers);var r={_id:e.question._id,answers:e.answers};t.update(s.path(),r).success(function(n){e.answers=n.answers})},e.vote=function(n,o){e.answers.forEach(function(e){e._id===n&&(e.votes=o)});var r={_id:e.question._id,answers:e.answers};t.update(s.path(),r).success(function(){e.message="Answer Updated!"})},t.fetchOne(s.path()).success(function(n){e.answers=n.answers,e.question=n})}]).directive("ngReallyClick",[function(){return{restrict:"A",link:function(e,n,t){n.bind("click",function(){var n=t.ngReallyMessage;n&&confirm(n)&&e.$apply(t.ngReallyClick)})}}}]),angular.module("app").service("AnswersSvc",["$http",function(e){this.create=function(n,t){return e.post("/api/questions"+n,t)},this.fetch=function(n){return e.get("/api/questions"+n)},this.deleteAnswer=function(n,t){return e["delete"]("api/questions/"+n+"/"+t)}}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc","$location","$window",function(e,n,t){e.login=function(s,o){n.login(s,o).then(function(n){e.$emit("login",n),t.path("/")},function(){e.errorMsg="Incorrect username/password"})}}]),angular.module("app").controller("QuestionDetailCtrl",["$scope","QuestionsSvc","$location",function(e,n,t){n.fetchOne(t.path()).success(function(n){e.question=n})}]),angular.module("app").controller("QuestionsCtrl",["$scope","QuestionsSvc","$location",function(e,n,t){e.askQuestion=function(){n.create({username:e.username,title:e.questionTitle,body:e.questionBody}).success(function(n){e.questions.unshift(n),e.questionBody=null,e.questionTitle=null,t.path("/")}).error(function(){e.errorMsg="All fields must be filled out"})},n.fetch().success(function(n){e.questions=n})}]),angular.module("app").service("QuestionsSvc",["$http",function(e){this.fetch=function(){return e.get("/api/questions/")},this.create=function(n){return e.post("/api/questions",n)},this.fetchOne=function(n){return e.get("/api/questions/"+n)},this.update=function(n,t){return e.put("/api/questions/"+n,t)}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc","$location",function(e,n,t){e.register=function(s,o){n.register(s,o).then(function(n){e.$emit("login",n),t.path("/")})}}]),app.config(["$routeProvider",function(e){e.when("/",{controller:"QuestionsCtrl",templateUrl:"questions.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"}).when("/ask",{controller:"QuestionsCtrl",templateUrl:"ask.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/:id",{controller:"QuestionDetailCtrl",templateUrl:"questionDetail.html"})}]),angular.module("app").service("UserSvc",["$http","$window",function(e,n){var t=this;t.getUser=function(){return e.get("/api/users").then(function(e){return e.data})},t.login=function(s,o){return e.post("/api/sessions",{username:s,password:o}).then(function(s){return console.log(s),t.token=s.data.token,n.sessionStorage.token=s.data,e.defaults.headers.common["X-Auth"]=s.data,t.getUser()})},t.logout=function(){delete n.sessionStorage.token,delete e.defaults.headers.common["X-Auth"]},t.register=function(n,s){return e.post("/api/users",{username:n,password:s}).then(function(){return t.login(n,s)})},t.checkUser=function(){return n.sessionStorage.token?(e.defaults.headers.common["X-Auth"]=n.sessionStorage.token,t.getUser()):void 0}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsIkFwcGxpY2F0aW9uLmN0cmwuanMiLCJhbnN3ZXIuY3RybC5qcyIsImFuc3dlci5zdmMuanMiLCJsb2dpbi5jdHJsLmpzIiwicXVlc3Rpb25EZXRhaWwuY3RybC5qcyIsInF1ZXN0aW9ucy5jdHJsLmpzIiwicXVlc3Rpb25zLnN2Yy5qcyIsInJlZ2lzdGVyLmN0cmwuanMiLCJyb3V0ZXMuanMiLCJ1c2VyLnN2Yy5qcyJdLCJuYW1lcyI6WyJhcHAiLCJhbmd1bGFyIiwibW9kdWxlIiwiY29udHJvbGxlciIsIiRzY29wZSIsIlVzZXJTdmMiLCIkd2luZG93Iiwic2Vzc2lvblN0b3JhZ2UiLCJ0b2tlbiIsImNoZWNrVXNlciIsInRoZW4iLCJ1c2VyIiwiY3VycmVudFVzZXIiLCJsb2dvdXQiLCJsb2dvdXRNZXNzYWdlIiwiJG9uIiwiXyIsIkFuc3dlcnNTdmMiLCJRdWVzdGlvbnNTdmMiLCIkbG9jYXRpb24iLCJlZGl0Qm9keSIsInBvc3RBbnN3ZXIiLCJhbnN3ZXJCb2R5IiwiYW5zd2VycyIsInB1c2giLCJ1c2VybmFtZSIsImJvZHkiLCJ2b3RlcyIsInF1ZXN0aW9uIiwiX2lkIiwidXBkYXRlIiwicGF0aCIsInN1Y2Nlc3MiLCJkZWxldGVBbnN3ZXIiLCJxdWVzdElEIiwiYW5zSUQiLCJjb25zb2xlIiwibG9nIiwiZWRpdEFuc3dlciIsImlkIiwiZm9yRWFjaCIsIml0ZW0iLCJ2b3RlIiwibWVzc2FnZSIsImZldGNoT25lIiwiZGlyZWN0aXZlIiwicmVzdHJpY3QiLCJsaW5rIiwic2NvcGUiLCJlbGVtZW50IiwiYXR0cnMiLCJiaW5kIiwibmdSZWFsbHlNZXNzYWdlIiwiY29uZmlybSIsIiRhcHBseSIsIm5nUmVhbGx5Q2xpY2siLCJzZXJ2aWNlIiwiJGh0dHAiLCJ0aGlzIiwiY3JlYXRlIiwiYW5zd2VyIiwicG9zdCIsImZldGNoIiwiZ2V0IiwibG9naW4iLCJwYXNzd29yZCIsIiRlbWl0IiwiZXJyb3JNc2ciLCJhc2tRdWVzdGlvbiIsInRpdGxlIiwicXVlc3Rpb25UaXRsZSIsInF1ZXN0aW9uQm9keSIsInF1ZXN0aW9ucyIsInVuc2hpZnQiLCJlcnJvciIsInB1dCIsInJlZ2lzdGVyIiwiY29uZmlnIiwiJHJvdXRlUHJvdmlkZXIiLCJ3aGVuIiwidGVtcGxhdGVVcmwiLCJzdmMiLCJnZXRVc2VyIiwicmVzcG9uc2UiLCJkYXRhIiwidmFsIiwiZGVmYXVsdHMiLCJoZWFkZXJzIiwiY29tbW9uIl0sIm1hcHBpbmdzIjoiQUFBQSxHQUFBQSxLQUFBQyxRQUFBQyxPQUFBLE9BQ0EsV0NEQUQsU0FBQUMsT0FBQSxPQUNBQyxXQUFBLG1CQUFBLFNBQUEsVUFBQSxVQUFBLFNBQUFDLEVBQUFDLEVBQUFDLEdBQ0FBLEVBQUFDLGVBQUFDLE9BQ0FILEVBQUFJLFlBQ0FDLEtBQUEsU0FBQUMsR0FDQVAsRUFBQVEsWUFBQUQsSUFJQVAsRUFBQVMsT0FBQSxXQUNBUixFQUFBUSxTQUNBVCxFQUFBUSxhQUFBLEVBQ0FSLEVBQUFVLGNBQUEsNEJBR0FWLEVBQUFXLElBQUEsUUFBQSxTQUFBQyxFQUFBTCxHQUNBUCxFQUFBUSxZQUFBRCxPQ2hCQVYsUUFBQUMsT0FBQSxPQUNBQyxXQUFBLGNBQUEsU0FBQSxhQUFBLGVBQUEsWUFBQSxTQUFBQyxFQUFBYSxFQUFBQyxFQUFBQyxHQUNBZixFQUFBZ0IsU0FBQSxHQUVBaEIsRUFBQWlCLFdBQUEsU0FBQUMsR0FDQWxCLEVBQUFtQixRQUFBQyxNQUNBQyxTQUFBckIsRUFBQVEsWUFBQWEsU0FDQUMsS0FBQUosRUFDQUssTUFBQSxHQUdBLElBQUFDLElBQ0FDLElBQUF6QixFQUFBd0IsU0FBQUMsSUFDQU4sUUFBQW5CLEVBQUFtQixRQUVBTCxHQUFBWSxPQUFBWCxFQUFBWSxPQUFBSCxHQUNBSSxRQUFBLFNBQUFKLEdBQ0F4QixFQUFBbUIsUUFBQUssRUFBQUwsV0FJQW5CLEVBQUE2QixhQUFBLFNBQUFDLEVBQUFDLEdBRUFDLFFBQUFDLElBQUFILEVBQUFDLEdBQ0FsQixFQUFBZ0IsYUFBQUMsRUFBQUMsR0FD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QUFBRCxLQUNBM0IsRUFBQTZCLFNBQUFDLFFBQUFDLE9BQUEsVUFBQUgsRUFBQUQsS0FDQUgsRUFBQUMsYUFJQUQsRUFBQXBFLE9BQUEsaUJBRUFQLEdBQUFDLGVBQUFDLFlBRUFpRCxHQUFBNkIsU0FBQUMsUUFBQUMsT0FBQSxXQUlBUCxFQUFBTCxTQUFBLFNBQUFuRCxFQUFBd0MsR0FDQSxNQUFBUixHQUFBSSxLQUFBLGNBQ0FwQyxTQUFBQSxFQUFBd0MsU0FBQUEsSUFDQXZELEtBQUEsV0FDQSxNQUFBdUUsR0FBQWpCLE1BQUF2QyxFQUFBd0MsTUFJQWdCLEVBQUF4RSxVQUFBLFdBQ0EsTUFBQUgsR0FBQUMsZUFBQUMsT0FDQWlELEVBQUE2QixTQUFBQyxRQUFBQyxPQUFBLFVBQUFsRixFQUFBQyxlQUFBQyxNQUNBeUUsRUFBQUMsV0FGQSIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBwID0gYW5ndWxhci5tb2R1bGUoJ2FwcCcsIFtcblx0XCJuZ1JvdXRlXCJcbl0pIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29udHJvbGxlcignQXBwbGljYXRpb25DdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgVXNlclN2YywgJHdpbmRvdykge1xuXHRpZiAoJHdpbmRvdy5zZXNzaW9uU3RvcmFnZS50b2tlbikgeyBcblx0XHRVc2VyU3ZjLmNoZWNrVXNlcigpXG5cdFx0LnRoZW4oZnVuY3Rpb24gKHVzZXIpIHtcblx0XHRcdCRzY29wZS5jdXJyZW50VXNlciA9IHVzZXJcblx0XHR9KVxuXHR9XG5cblx0JHNjb3BlLmxvZ291dCA9IGZ1bmN0aW9uICgpIHtcblx0XHRVc2VyU3ZjLmxvZ291dCgpXG5cdFx0JHNjb3BlLmN1cnJlbnRVc2VyID0gZmFsc2Vcblx0XHQkc2NvcGUubG9nb3V0TWVzc2FnZSA9IFwiWW91IGhhdmUgYmVlbiBsb2dnZWQgb3V0XCJcblx0fVxuXHRcblx0JHNjb3BlLiRvbignbG9naW4nLCBmdW5jdGlvbiAoXywgdXNlcikge1xuXHRcdCRzY29wZS5jdXJyZW50VXNlciA9IHVzZXJcblx0fSlcbn0pIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29udHJvbGxlcignQW5zd2VyQ3RybCcsIGZ1bmN0aW9uICgkc2NvcGUsIEFuc3dlcnNTdmMsIFF1ZXN0aW9uc1N2YywgJGxvY2F0aW9uKSB7XG5cdCRzY29wZS5lZGl0Qm9keSA9ICcnXG5cblx0JHNjb3BlLnBvc3RBbnN3ZXIgPSBmdW5jdGlvbiAoYW5zd2VyQm9keSkge1xuXHRcdCRzY29wZS5hbnN3ZXJzLnB1c2goe1xuXHRcdFx0dXNlcm5hbWU6ICRzY29wZS5jdXJyZW50VXNlci51c2VybmFtZSxcblx0XHRcdGJvZHk6IFx0ICBhbnN3ZXJCb2R5LFxuXHRcdFx0dm90ZXM6ICAgIDAgXG5cdFx0fSlcblxuXHRcdHZhciBxdWVzdGlvbiA9IHsgXG5cdFx0XHRfaWQ6ICRzY29wZS5xdWVzdGlvbi5faWQsIFxuXHRcdFx0YW5zd2VyczogJHNjb3BlLmFuc3dlcnNcblx0XHR9XG5cdFx0UXVlc3Rpb25zU3ZjLnVwZGF0ZSgkbG9jYXRpb24ucGF0aCgpLCBxdWVzdGlvbilcblx0XHQuc3VjY2VzcyhmdW5jdGlvbiAocXVlc3Rpb24pIHtcblx0XHRcdCRzY29wZS5hbnN3ZXJzID0gcXVlc3Rpb24uYW5zd2Vyc1xuXHRcdH0pXG5cdH1cblxuXHQkc2NvcGUuZGVsZXRlQW5zd2VyID0gZnVuY3Rpb24ocXVlc3RJRCwgYW5zSUQpIHtcblx0XHQvLyB0aGlzLnZvdGUgKz0gYW1vdW50XG5cdFx0Y29uc29sZS5sb2cocXVlc3RJRCwgYW5zSUQpXG5cdFx0QW5zd2Vyc1N2Yy5kZWxldGVBbnN3ZXIocXVlc3RJRCwgYW5zSUQpXG5cdFx0LnN1Y2Nlc3MoZnVuY3Rpb24gKGFuc3dlcnMpIHtcblx0XHRcdCRzY29wZS5hbnN3ZXJzID0gYW5zd2Vyc1xuXHRcdH0pXG5cdH1cblxuXHQkc2NvcGUuZWRpdEFuc3dlciA9IGZ1bmN0aW9uIChpZCwgZWRpdEJvZHkpIHtcblx0XHQkc2NvcGUuYW5zd2Vycy5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XG5cdFx0XHRpZihpdGVtLl9pZCA9PT0gaWQpIHtcblx0XHRcdFx0aXRlbS5ib2R5ID0gZWRpdEJvZHlcblx0XHRcdFx0Ly8gY29uc29sZS5sb2coZWRpdEJvZHkpXG5cdFx0XHR9XG5cdFx0fSlcblxuXHRcdGNvbnNvbGUubG9nKCRzY29wZS5hbnN3ZXJzKVxuXG5cdFx0dmFyIHF1ZXN0aW9uID0ge1xuXHRcdFx0X2lkOiAkc2NvcGUucXVlc3Rpb24uX2lkLFxuXHRcdFx0YW5zd2VyczogJHNjb3BlLmFuc3dlcnNcblx0XHR9XG5cblx0XHRRdWVzdGlvbnNTdmMudXBkYXRlKCRsb2NhdGlvbi5wYXRoKCksIHF1ZXN0aW9uKVxuXHRcdC5zdWNjZXNzKGZ1bmN0aW9uIChxdWVzdGlvbikge1xuXHRcdFx0JHNjb3BlLmFuc3dlcnMgPSBxdWVzdGlvbi5hbnN3ZXJzXG5cdFx0fSlcblx0fVxuXG5cdCRzY29wZS52b3RlID0gZnVuY3Rpb24gKGlkLCB2b3RlKSB7XG5cdFx0JHNjb3BlLmFuc3dlcnMuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkge1xuXHRcdFx0aWYoaXRlbS5faWQgPT09IGlkKSB7XG5cdFx0XHRcdGl0ZW0udm90ZXMgPSB2b3RlXG5cdFx0XHRcdC8vIGNvbnNvbGUubG9nKGVkaXRCb2R5KVxuXHRcdFx0fVxuXHRcdH0pXG5cblx0XHR2YXIgcXVlc3Rpb24gPSB7XG5cdFx0XHRfaWQ6ICRzY29wZS5xdWVzdGlvbi5faWQsXG5cdFx0XHRhbnN3ZXJzOiAkc2NvcGUuYW5zd2Vyc1xuXHRcdH1cblxuXHRcdFF1ZXN0aW9uc1N2Yy51cGRhdGUoJGxvY2F0aW9uLnBhdGgoKSwgcXVlc3Rpb24pXG5cdFx0LnN1Y2Nlc3MoZnVuY3Rpb24gKHF1ZXN0aW9uKSB7XG5cdFx0XHQkc2NvcGUubWVzc2FnZSA9IFwiQW5zd2VyIFVwZGF0ZWQhXCJcblx0XHR9KVxuXG5cdH1cblxuXHRRdWVzdGlvbnNTdmMuZmV0Y2hPbmUoJGxvY2F0aW9uLnBhdGgoKSlcblx0LnN1Y2Nlc3MoZnVuY3Rpb24gKHF1ZXN0aW9uKSB7XG5cdFx0ICRzY29wZS5hbnN3ZXJzID0gcXVlc3Rpb24uYW5zd2Vyc1xuXHRcdCAkc2NvcGUucXVlc3Rpb24gPSBxdWVzdGlvblxuXHR9KVxuXG59KVxuXG5cbi5kaXJlY3RpdmUoJ25nUmVhbGx5Q2xpY2snLCBbZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcmVzdHJpY3Q6ICdBJyxcbiAgICAgICAgbGluazogZnVuY3Rpb24oc2NvcGUsIGVsZW1lbnQsIGF0dHJzKSB7XG4gICAgICAgICAgICBlbGVtZW50LmJpbmQoJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdmFyIG1lc3NhZ2UgPSBhdHRycy5uZ1JlYWxseU1lc3NhZ2U7XG4gICAgICAgICAgICAgICAgaWYgKG1lc3NhZ2UgJiYgY29uZmlybShtZXNzYWdlKSkge1xuICAgICAgICAgICAgICAgICAgICBzY29wZS4kYXBwbHkoYXR0cnMubmdSZWFsbHlDbGljayk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG59XSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5zZXJ2aWNlKCdBbnN3ZXJzU3ZjJywgZnVuY3Rpb24gKCRodHRwKSB7XG5cdHRoaXMuY3JlYXRlID0gZnVuY3Rpb24gKGlkLCBhbnN3ZXIpIHtcbiAgXHRcdHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL3F1ZXN0aW9ucycgKyBpZCwgYW5zd2VyKVxuICBcdH1cblxuICBcdHRoaXMuZmV0Y2ggPSBmdW5jdGlvbiAoaWQpIHtcbiAgXHRcdHJldHVybiAkaHR0cC5nZXQoJy9hcGkvcXVlc3Rpb25zJyArIGlkKVxuICBcdH1cblxuICBcdHRoaXMuZGVsZXRlQW5zd2VyID0gZnVuY3Rpb24ocXVlc3RJRCwgYW5zSUQpIHtcbiAgXHRcdHJldHVybiAkaHR0cC5kZWxldGUoJ2FwaS9xdWVzdGlvbnMvJyArIHF1ZXN0SUQgKyAnLycgKyBhbnNJRClcbiAgXHR9XG5cbn0pIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29udHJvbGxlcignTG9naW5DdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgVXNlclN2YywgJGxvY2F0aW9uLCAkd2luZG93KSB7XG5cdCRzY29wZS5sb2dpbiA9IGZ1bmN0aW9uICh1c2VybmFtZSwgcGFzc3dvcmQpIHtcblx0XHRVc2VyU3ZjLmxvZ2luKHVzZXJuYW1lLCBwYXNzd29yZClcblx0XHQudGhlbihmdW5jdGlvbiAodXNlcil7XG5cdFx0XHQkc2NvcGUuJGVtaXQoJ2xvZ2luJywgdXNlcilcblx0XHRcdCRsb2NhdGlvbi5wYXRoKCcvJylcblx0XHR9LFxuXHRcdGZ1bmN0aW9uKGVycm9yKSB7XG5cdFx0XHQkc2NvcGUuZXJyb3JNc2cgPSAnSW5jb3JyZWN0IHVzZXJuYW1lL3Bhc3N3b3JkJ1xuXHRcdH0pXG5cdH1cblxufSkiLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb250cm9sbGVyKCdRdWVzdGlvbkRldGFpbEN0cmwnLCBmdW5jdGlvbiAoJHNjb3BlLCBRdWVzdGlvbnNTdmMsICRsb2NhdGlvbikge1x0XG5cdFF1ZXN0aW9uc1N2Yy5mZXRjaE9uZSgkbG9jYXRpb24ucGF0aCgpKVxuXHQuc3VjY2VzcyhmdW5jdGlvbiAocXVlc3Rpb24pIHtcblx0XHQkc2NvcGUucXVlc3Rpb24gPSBxdWVzdGlvblx0XG5cdH0pXG5cblx0XG5cbn0pIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29udHJvbGxlcignUXVlc3Rpb25zQ3RybCcsIGZ1bmN0aW9uICgkc2NvcGUsIFF1ZXN0aW9uc1N2YywgJGxvY2F0aW9uKSB7XG4gICRzY29wZS5hc2tRdWVzdGlvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIFF1ZXN0aW9uc1N2Yy5jcmVhdGUoe1xuICAgICAgICB1c2VybmFtZTogJHNjb3BlLnVzZXJuYW1lLFxuICAgICAgICB0aXRsZTogXHQgICRzY29wZS5xdWVzdGlvblRpdGxlLFxuICAgICAgICBib2R5OiAgICAgJHNjb3BlLnF1ZXN0aW9uQm9keVxuICAgICAgfSlcbiAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uIChxdWVzdGlvbikge1xuICAgICAgICAkc2NvcGUucXVlc3Rpb25zLnVuc2hpZnQocXVlc3Rpb24pXG4gICAgICAgICRzY29wZS5xdWVzdGlvbkJvZHkgPSBudWxsXG4gICAgICAgICRzY29wZS5xdWVzdGlvblRpdGxlID0gbnVsbFxuICAgICAgICAkbG9jYXRpb24ucGF0aCgnLycpXG4gICAgICB9KVxuICAgICAgLmVycm9yKGZ1bmN0aW9uKGVycm9yKSB7XG5cdFx0JHNjb3BlLmVycm9yTXNnID0gJ0FsbCBmaWVsZHMgbXVzdCBiZSBmaWxsZWQgb3V0J1xuXHQgfSlcbiAgfVxuXG4gIFF1ZXN0aW9uc1N2Yy5mZXRjaCgpXG4gIC5zdWNjZXNzKGZ1bmN0aW9uIChxdWVzdGlvbnMpIHtcbiAgICAkc2NvcGUucXVlc3Rpb25zID0gcXVlc3Rpb25zXG4gIH0pXG59KSIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLnNlcnZpY2UoJ1F1ZXN0aW9uc1N2YycsIGZ1bmN0aW9uICgkaHR0cCkge1xuICB0aGlzLmZldGNoID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvcXVlc3Rpb25zLycpXG4gIH1cbiAgdGhpcy5jcmVhdGUgPSBmdW5jdGlvbiAocXVlc3Rpb24pIHtcbiAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9xdWVzdGlvbnMnLCBxdWVzdGlvbilcbiAgfVxuICB0aGlzLmZldGNoT25lID0gZnVuY3Rpb24gKGlkKSB7XG4gIFx0cmV0dXJuICRodHRwLmdldCgnL2FwaS9xdWVzdGlvbnMvJyArIGlkKVxuICB9XG4gIHRoaXMudXBkYXRlID0gZnVuY3Rpb24oaWQsIHF1ZXN0aW9uKSB7XG4gIFx0cmV0dXJuICRodHRwLnB1dCgnL2FwaS9xdWVzdGlvbnMvJyArIGlkLCBxdWVzdGlvbilcbiAgfVxufSkiLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb250cm9sbGVyKCdSZWdpc3RlckN0cmwnLCBmdW5jdGlvbiAoJHNjb3BlLCBVc2VyU3ZjLCAkbG9jYXRpb24pIHtcbiAgJHNjb3BlLnJlZ2lzdGVyID0gZnVuY3Rpb24gKHVzZXJuYW1lLCBwYXNzd29yZCkge1xuICAgIFVzZXJTdmMucmVnaXN0ZXIodXNlcm5hbWUsIHBhc3N3b3JkKVxuICAgIC50aGVuKGZ1bmN0aW9uICh1c2VyKSB7XG4gICAgICBcdCRzY29wZS4kZW1pdCgnbG9naW4nLCB1c2VyKVxuXHRcdCRsb2NhdGlvbi5wYXRoKCcvJylcbiAgICB9KVxuICB9XG59KVxuIiwiYXBwLmNvbmZpZyhmdW5jdGlvbiAoJHJvdXRlUHJvdmlkZXIpIHtcblx0JHJvdXRlUHJvdmlkZXJcblx0LndoZW4oJy8nLCB7IGNvbnRyb2xsZXI6ICdRdWVzdGlvbnNDdHJsJywgdGVtcGxhdGVVcmw6ICdxdWVzdGlvbnMuaHRtbCcgfSlcblx0LndoZW4oJy9sb2dpbicsIHsgY29udHJvbGxlcjogJ0xvZ2luQ3RybCcsIHRlbXBsYXRlVXJsOiAnbG9naW4uaHRtbCcgfSlcblx0LndoZW4oJy9hc2snLCB7IGNvbnRyb2xsZXI6ICdRdWVzdGlvbnNDdHJsJywgdGVtcGxhdGVVcmw6ICdhc2suaHRtbCcgfSlcblx0LndoZW4oJy9yZWdpc3RlcicsIHsgY29udHJvbGxlcjogJ1JlZ2lzdGVyQ3RybCcsIHRlbXBsYXRlVXJsOiAncmVnaXN0ZXIuaHRtbCcgfSlcblx0LndoZW4oJy86aWQnLCB7IGNvbnRyb2xsZXI6ICdRdWVzdGlvbkRldGFpbEN0cmwnLCB0ZW1wbGF0ZVVybDogJ3F1ZXN0aW9uRGV0YWlsLmh0bWwnIH0pXG59KSIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLnNlcnZpY2UoJ1VzZXJTdmMnLCBmdW5jdGlvbiAoJGh0dHAsICR3aW5kb3cpIHtcblx0dmFyIHN2YyA9IHRoaXNcblx0c3ZjLmdldFVzZXIgPSBmdW5jdGlvbiAoKSB7XG5cdFx0cmV0dXJuICRodHRwLmdldCgnL2FwaS91c2VycycpXG5cdFx0LnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcblx0XHRcdHJldHVybiByZXNwb25zZS5kYXRhXG5cdFx0fSlcblx0fVxuXG5cdHN2Yy5sb2dpbiA9IGZ1bmN0aW9uICh1c2VybmFtZSwgcGFzc3dvcmQpIHtcblx0XHRyZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9zZXNzaW9ucycsIHtcblx0XHRcdHVzZXJuYW1lOiB1c2VybmFtZSwgcGFzc3dvcmQ6IHBhc3N3b3JkXG5cdFx0fSkudGhlbihmdW5jdGlvbiAodmFsKSB7XG5cdFx0XHRjb25zb2xlLmxvZyh2YWwpXG5cdFx0XHRzdmMudG9rZW4gPSB2YWwuZGF0YS50b2tlblx0XG5cdFx0XHQkd2luZG93LnNlc3Npb25TdG9yYWdlLnRva2VuID0gdmFsLmRhdGFcdFx0IFxuXHRcdFx0JGh0dHAuZGVmYXVsdHMuaGVhZGVycy5jb21tb25bJ1gtQXV0aCddID0gdmFsLmRhdGFcblx0XHRcdHJldHVybiBzdmMuZ2V0VXNlcigpXG5cdFx0fSlcblx0fVxuXG5cdHN2Yy5sb2dvdXQgPSBmdW5jdGlvbigpIHtcblx0ICAgIC8vIEVyYXNlIHRoZSB0b2tlbiBmcm9tIHRoZSBicm93c2VyXG5cdCAgICBkZWxldGUgJHdpbmRvdy5zZXNzaW9uU3RvcmFnZS50b2tlbjtcblx0ICAgIC8vIFJlbW92ZSBoZWFkZXIgc28gdXNlciBpcyBubyBsb25nZXIgYXV0aGVudGljYXRlZFxuXHQgICAgZGVsZXRlICRodHRwLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uWydYLUF1dGgnXTtcdCAgICBcblx0fTtcblxuXG5cdHN2Yy5yZWdpc3RlciA9IGZ1bmN0aW9uICh1c2VybmFtZSwgcGFzc3dvcmQpIHtcblx0ICAgIHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL3VzZXJzJywge1xuXHQgICAgICB1c2VybmFtZTogdXNlcm5hbWUsIHBhc3N3b3JkOiBwYXNzd29yZFxuXHQgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7XG5cdCAgICAgIHJldHVybiBzdmMubG9naW4odXNlcm5hbWUsIHBhc3N3b3JkKVxuXHQgICAgfSlcbiAgXHR9XG5cbiAgXHRzdmMuY2hlY2tVc2VyID0gZnVuY3Rpb24gKCkge1xuICBcdFx0aWYgKCR3aW5kb3cuc2Vzc2lvblN0b3JhZ2UudG9rZW4pIHsgICBcdFx0XHRcdCBcblx0XHRcdCRodHRwLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uWydYLUF1dGgnXSA9ICR3aW5kb3cuc2Vzc2lvblN0b3JhZ2UudG9rZW5cblx0XHRcdHJldHVybiBzdmMuZ2V0VXNlcigpXG5cdFx0fVxuICBcdH1cblxufSkiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=